from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

def get_main_menu():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞."""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìù –ù–æ–≤—ã–µ –¥–µ–ª–∞", callback_data="add_task")],
        [InlineKeyboardButton(text="üìã –ú–æ–∏ –¥–µ–ª–∞", callback_data="show_tasks")],
        [InlineKeyboardButton(text="üé≤ –°–ª—É—á–∞–π–Ω—ã–µ –¥–µ–ª–∞", callback_data="random_task")],
        [InlineKeyboardButton(text="‚è≥ –†–∞–±–æ—á–∏–π –ø–µ—Ä–µ—Ä—ã–≤—á–∏–∫", callback_data="start_break")],
        [InlineKeyboardButton(text="üìà –ö–∞–∫ –¥–µ–ª–∞?", callback_data="stats")],
        [InlineKeyboardButton(text="üóëÔ∏è –í—Å—ë –≤—ã–∫–∏–Ω—É—Ç—å", callback_data="clear_tasks")],
    ])
    return keyboard

def get_cancel_button():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã."""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚ùå –û—Ç–±–æ–π", callback_data="cancel")],
    ])
    return keyboard

def get_priority_options(task_id=None):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞."""
    callback_prefix = f"priority_{task_id}_" if task_id else "priority_"
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üî¥ –í—ã—Å–æ–∫–∏–π", callback_data=f"{callback_prefix}high")],
        [InlineKeyboardButton(text="üü° –°—Ä–µ–¥–Ω–∏–π", callback_data=f"{callback_prefix}medium")],
        [InlineKeyboardButton(text="üü¢ –ù–∏–∑–∫–∏–π", callback_data=f"{callback_prefix}low")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")],
    ])
    return keyboard

def get_tasks_pagination(tasks, page=0, tasks_per_page=5, sort_by_priority=False):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∑–∞–¥–∞—á–∞–º–∏ –∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π."""
    start = page * tasks_per_page
    end = start + tasks_per_page
    task_chunk = tasks[start:end]

    keyboard = InlineKeyboardMarkup(inline_keyboard=[])
    for task in task_chunk:
        status = "‚úÖ" if task["done"] else "‚ö°"
        priority = {"high": "üî¥", "medium": "üü°", "low": "üü¢"}.get(task["priority"], "üü°")
        # –£–º–µ–Ω—å—à–∞–µ–º –¥–ª–∏–Ω—É —Ç–µ–∫—Å—Ç–∞ –∑–∞–¥–∞—á–∏ –¥–æ 15 —Å–∏–º–≤–æ–ª–æ–≤, —á—Ç–æ–±—ã –º–∏–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —à–∏—Ä–∏–Ω—É
        task_text = f"{status} {priority} {task['text'][:15]}..."
        # –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É
        buttons = [
            InlineKeyboardButton(text="‚úÖ", callback_data=f"mark_{task['_id']}"),
            InlineKeyboardButton(text="‚úèÔ∏è", callback_data=f"edit_{task['_id']}"),
            InlineKeyboardButton(text="üóëÔ∏è", callback_data=f"delete_{task['_id']}"),
            InlineKeyboardButton(text="‚è∞", callback_data=f"remind_{task['_id']}"),
            InlineKeyboardButton(text="‚≠ê", callback_data=f"set_priority_{task['_id']}"),
        ]
        keyboard.inline_keyboard.append([InlineKeyboardButton(text=task_text, callback_data=f"show_task_{task['_id']}")])
        keyboard.inline_keyboard.append(buttons)  # –ö–Ω–æ–ø–∫–∏ —Ç–µ–ø–µ—Ä—å –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ

    nav_buttons = []
    if page > 0:
        nav_buttons.append(InlineKeyboardButton(text="‚¨ÖÔ∏è", callback_data=f"page_{page-1}_{'priority' if sort_by_priority else 'normal'}"))
    if end < len(tasks):
        nav_buttons.append(InlineKeyboardButton(text="‚û°Ô∏è", callback_data=f"page_{page+1}_{'priority' if sort_by_priority else 'normal'}"))
    if nav_buttons:
        keyboard.inline_keyboard.append(nav_buttons)

    keyboard.inline_keyboard.append([InlineKeyboardButton(text="üè†", callback_data="main_menu")])
    return keyboard

def get_reminder_options(task_id):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è."""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚è∞ 1 —á", callback_data=f"remind_{task_id}_3600")],
        [InlineKeyboardButton(text="‚è∞ 2 —á", callback_data=f"remind_{task_id}_7200")],
        [InlineKeyboardButton(text="‚è∞ –°–≤–æ—ë", callback_data=f"remind_{task_id}_custom")],
        [InlineKeyboardButton(text="‚ùå", callback_data="cancel")],
    ])
    return keyboard